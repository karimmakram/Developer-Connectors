[{"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\store.js":"1","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\index.js":"2","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Alert.js":"3","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\auth\\Register.js":"4","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\auth\\Login.js":"5","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\App.js":"6","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\alert\\reducer.js":"7","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\auth\\action.js":"8","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\alert\\action.js":"9","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Header.js":"10","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\auth\\reducer.js":"11","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\dashboard\\Dashboard.js":"12","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\routing\\PrivateRoute.js":"13","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\types.js":"14","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\profile\\reducer.js":"15","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\profile\\action.js":"16","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Landing.js":"17","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Spinner.js":"18","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\profileForms\\Profile.js":"19","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\dashboard\\DashboardAction.js":"20","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\helper\\setAuthToken.js":"21","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\helper\\configHeader.js":"22"},{"size":379,"mtime":1614593852268,"results":"23","hashOfConfig":"24"},{"size":197,"mtime":1612009759382,"results":"25","hashOfConfig":"24"},{"size":489,"mtime":1612218010926,"results":"26","hashOfConfig":"24"},{"size":4623,"mtime":1614603529225,"results":"27","hashOfConfig":"24"},{"size":2309,"mtime":1614695497728,"results":"28","hashOfConfig":"24"},{"size":1500,"mtime":1614687032341,"results":"29","hashOfConfig":"24"},{"size":401,"mtime":1614593783010,"results":"30","hashOfConfig":"24"},{"size":1899,"mtime":1614770223631,"results":"31","hashOfConfig":"24"},{"size":312,"mtime":1614593638698,"results":"32","hashOfConfig":"24"},{"size":1560,"mtime":1614676288661,"results":"33","hashOfConfig":"24"},{"size":984,"mtime":1614594308250,"results":"34","hashOfConfig":"24"},{"size":1437,"mtime":1614711393127,"results":"35","hashOfConfig":"24"},{"size":609,"mtime":1614605983669,"results":"36","hashOfConfig":"24"},{"size":658,"mtime":1614769901793,"results":"37","hashOfConfig":"24"},{"size":719,"mtime":1614696353346,"results":"38","hashOfConfig":"24"},{"size":1996,"mtime":1614770488652,"results":"39","hashOfConfig":"24"},{"size":1077,"mtime":1614676502116,"results":"40","hashOfConfig":"24"},{"size":253,"mtime":1614677302107,"results":"41","hashOfConfig":"24"},{"size":8075,"mtime":1614712198266,"results":"42","hashOfConfig":"24"},{"size":645,"mtime":1614711514480,"results":"43","hashOfConfig":"24"},{"size":260,"mtime":1612297582112,"results":"44","hashOfConfig":"24"},{"size":136,"mtime":1614770271890,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t5rw89",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\store.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\index.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Alert.js",[],["93","94"],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\auth\\Register.js",[],["95","96"],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\auth\\Login.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\App.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\alert\\reducer.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\auth\\action.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\alert\\action.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Header.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\auth\\reducer.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\dashboard\\Dashboard.js",["97"],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\routing\\PrivateRoute.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\types.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\profile\\reducer.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\redux\\profile\\action.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Landing.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\layout\\Spinner.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\profileForms\\Profile.js",["98"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { add_profile, get_profile } from '../../redux/profile/action'\r\nimport { withRouter, Link } from 'react-router-dom'\r\n\r\nfunction Profile({ add_profile, get_profile, history, profile }) {\r\n    useEffect(() => {\r\n        get_profile();\r\n        setProfile(true)\r\n    }, [])\r\n    const options = [{ value: 0, option: '* Select Professional Status' }, { value: 'Developer', option: 'Developer' },\r\n    { value: 'Junior Developer', option: 'Junior Developer' }, { value: 'Senior Developer', option: 'Senior Developer' },\r\n    { value: 'Manager', option: 'Manager' }, { value: 'Student or Learning', option: 'Student or Learning' },\r\n    { value: 'Instructor', option: 'Instructor or Teacher' }, { value: 'Other', option: 'Other' }, { value: 'Intern', option: 'Intern' }\r\n    ]\r\n    const [socialFlag, setSocial] = useState(false)\r\n    const [profileFlag, setProfile] = useState(false)\r\n    const [formData, setFormData] = useState({\r\n        status: '',\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        skills: '',\r\n        githubUsername: '',\r\n        bio: '',\r\n        facebook: '',\r\n        youtube: '',\r\n        twitter: '',\r\n        instagram: '',\r\n        linkedin: ''\r\n    })\r\n    const { status, company, website, location, skills, githubUsername, bio } = formData\r\n    const { twitter, facebook, instagram, linkedin, youtube } = formData\r\n    const DataChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value })\r\n    if (profile && profileFlag) {\r\n        console.log(profile);\r\n        setFormData({\r\n            status: profile.status,\r\n            company: profile.company,\r\n            website: profile.website,\r\n            location: profile.location,\r\n            skills: profile.skills.join(','),\r\n            githubUsername: profile.githubUsername,\r\n            bio: profile.bio,\r\n            facebook: profile.social.facebook,\r\n            twitter: profile.social.twitter,\r\n            linkedin: profile.social.linkedin,\r\n            instagram: profile.social.instagram,\r\n            youtube: profile.social.youtube\r\n        })\r\n        setProfile(false)\r\n    }\r\n    const submitProfile = async (e) => {\r\n        e.preventDefault()\r\n        const date = {\r\n            status, company, website, location, skills, githubUsername, bio,\r\n            social: {\r\n                facebook, twitter, linkedin, instagram, youtube\r\n            }\r\n        }\r\n        const body = JSON.stringify(date)\r\n        if (profile)\r\n            add_profile(body, history, true)\r\n        else\r\n            add_profile(body, history)\r\n\r\n    }\r\n    return (\r\n\r\n        <Fragment>\r\n\r\n            <h1 className=\"large text-primary\">\r\n                Create Your Profile\r\n      </h1>\r\n            <p className=\"lead\">\r\n                <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n                profile stand out\r\n      </p>\r\n            <form className=\"form\" onSubmit={submitProfile}>\r\n                <div className=\"form-group\">\r\n                    <select name=\"status\" value={status} onChange={e => DataChange(e)}>\r\n                        {options.map((option, index) => <option key={index} value={option.value}>{option.option}</option>)}\r\n                    </select>\r\n                    <small className=\"form-text\"\r\n                    >Give us an idea of where you are at in your career</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" value={company} placeholder=\"Company\" onChange={e => DataChange(e)} name=\"company\" />\r\n                    <small className=\"form-text\"\r\n                    >Could be your own company or one you work for</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" value={website} placeholder=\"Website\" name=\"website\" onChange={e => DataChange(e)} />\r\n                    <small className=\"form-text\">\r\n                        Could be your own or a company website</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"Location\" value={location} name=\"location\" onChange={e => DataChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >City & state suggested (eg. Boston, MA)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"text\" placeholder=\"* Skills\" value={skills} name=\"skills\" onChange={e => DataChange(e)} />\r\n                    <small className=\"form-text\"\r\n                    >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Github Username\"\r\n                        value={githubUsername}\r\n                        name=\"githubUsername\"\r\n                        onChange={e => DataChange(e)}\r\n                    />\r\n                    <small className=\"form-text\"\r\n                    >If you want your latest repos and a Github link, include your\r\n            username</small\r\n                    >\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea placeholder=\"A short bio of yourself\" value={bio} name=\"bio\" onChange={e => DataChange(e)}></textarea>\r\n                    <small className=\"form-text\">Tell us a little about yourself</small>\r\n                </div>\r\n\r\n                <div className=\"my-2\">\r\n                    <button type=\"button\" className=\"btn btn-light\" onClick={() => setSocial(!socialFlag)}>\r\n                        Add Social Network Links\r\n          </button>\r\n                    <span>Optional</span>\r\n                </div>\r\n                {!socialFlag ? null :\r\n                    <Fragment>\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-twitter fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Twitter URL\" value={twitter} name=\"twitter\" onChange={e => DataChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-facebook fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Facebook URL\" value={facebook} name=\"facebook\" onChange={e => DataChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-youtube fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"YouTube URL\" value={youtube} name=\"youtube\" onChange={e => DataChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Linkedin URL\" value={linkedin} name=\"linkedin\" onChange={e => DataChange(e)} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group social-input\">\r\n                            <i className=\"fab fa-instagram fa-2x\"></i>\r\n                            <input type=\"text\" placeholder=\"Instagram URL\" value={instagram} name=\"instagram\" onChange={e => DataChange(e)} />\r\n                        </div>\r\n                    </Fragment>}\r\n                <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n                <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\nconst mapStateToProps = state => ({ profile: state.profile.profile })\r\nexport default connect(mapStateToProps, { add_profile, get_profile })(withRouter(Profile))\r\n","D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\component\\dashboard\\DashboardAction.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\helper\\setAuthToken.js",[],"D:\\Kolya\\courses\\mernProjects\\DevConnectors\\client\\src\\helper\\configHeader.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":10,"column":8,"nodeType":"107","endLine":10,"endColumn":10,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"106","line":10,"column":8,"nodeType":"107","endLine":10,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get_profile'. Either include it or remove the dependency array. If 'get_profile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["112"],["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"114","fix":"116"},"Update the dependencies array to be: [get_profile]",{"range":"117","text":"118"},{"range":"119","text":"118"},[420,422],"[get_profile]",[375,377]]